---
author: David Carslaw
---

# A closer look at trends {#sec-trends-gam}

Understanding trends is a core component of air quality and the
atmospheric sciences in general. [openair]{.pkg} provides two main functions
for considering trends (`smoothTrend` and `TheilSen`; see @sec-smoothTrend and @sec-TheilSen, the
latter useful for linear trend estimates. Understanding trends and
quantifying them robustly is not so easy and careful analysis would
treat each time series individually and consider a wide range of
diagnostics. In this section we take advantage of some of the
excellent capabilities that R has to consider fitting trend
models. Experience with real atmospheric composition data shows that
trends are rarely linear, which is unfortunate given how much of
statistics has been built around the linear model.

Generalized Additive Models (GAMs) offer a flexible approach to
calculating trends and in particular, the [mgcv]{.pkg} package contains
many functions that are very useful for such modelling. Some of the
details of this type of model are presented in @Wood2006 and
the [mgcv]{.pkg} package itself.

The example considered is 23 years of O~3~ measurements at Mace Head
on the West coast of Ireland. The example shows the sorts of steps
that might be taken to build a model to explain the trend. The data
are first imported and then the year, month and `trend'
estimated. Note that `trend' here is simply a decimal date that can be
used to construct various explanatory models.

First we import the data:

```{r echo=FALSE,message=FALSE,warning=FALSE,cache=FALSE}
library(mgcv)
library(openair) # load openair
load("book_data/MaceHead.RData")
```

```{r eval=FALSE}
library(mgcv)
dat <- importAURN(site = "mh", year = 1988:2010)
```

```{r calcMonthly}
## calculate monthly means
monthly <- timeAverage(dat, avg.time = "month")
## now calculate components for the models
monthly$year <- as.numeric(format(monthly$date, "%Y"))
monthly$month <- as.numeric(format(monthly$date, "%m"))
monthly <- transform(monthly, trend = year + (month - 1) / 12)
```

It is *always* a good idea to plot the data first:

```{r}
#| label: fig-MHplot
#| fig-cap: Monthly mean O~3~ concentrations at Mace Head, Ireland (1998--2010).
#| fig-width: 10
#| fig-height: 5
timePlot(monthly, pollutant = "o3")
```

@fig-MHplot shows that there is a clear seasonal variation in
O~3~ concentrations, which is certainly expected. Less obvious is
whether there is a trend.

Even though it is known there is a seasonal signal in the data, we
will first of all ignore it and build a simple model that only has a trend component (model M0).

```{r mod1}
M0 <- gam(o3 ~ s(trend), data = monthly)
summary(M0)
```

This model only explains about 2\% of the variation as shown by the
adjusted r^2^. More of a problem however is that no account has been
taken of the seasonal variation. An easy way of seeing the effect of
this omission is to plot the autocorrelation function (ACF) of the
residuals, shown in @fig-M0ACF). This Figure clearly shows the
residuals have a strong seasonal pattern. @Chatfield2004
provides lots of useful information on time series modelling.

```{r}
#| label: fig-M0ACF
#| fig-cap: ACF for the residuals of model M0.
#| fig-width: 5
#| fig-height: 4
#| out-width: 70%
acf(residuals(M0))
```

A refined model should therefore take account of the seasonal variation
in O~3~ concentrations. Therefore, we add a term taking account of
the seasonal variation. Note also that we choose a cyclic spline for
the monthly component (`bs = "cc"`), which joins the first and last
points i.e. January and December.

```{r mod1a}
M1 <- gam(o3 ~ s(trend) + s(month, bs = "cc"), data = monthly)
summary(M1)
```

Now we have a model that explains much more of the variation with an
r^2^ of 0.65. Also, the p-values for the trend and seasonal
components are both highly statistically significant. Let's have a look
at the separate components for trend and seasonal variation:

```{r}
#| label: fig-M1trend
#| fig-cap: The trend component of model M1.
#| fig-width: 5
#| fig-height: 4
#| out-width: 70%
plot.gam(M1, select = 1, shade = TRUE)
```

```{r}
#| label: fig-M1seas
#| fig-cap: The seasonal component of model M1.
#| fig-width: 5
#| fig-height: 4
#| out-width: 70%
plot.gam(M1, select = 2, shade = TRUE)
```

The seasonal component shown in @fig-M1seas) clearly shows the
strong seasonal effect on O~3~ at this site (peaking in April). The
trend component is actually linear in this case and could be modelled
as such. This model looks much better, but as is often the case
autocorrelation could remain important. The ACF is shown in @fig-M1ACF and shows there is still some short-term correlation in the residuals.

Note also that there are other diagnostic tests one should consider
when comparing these models that are not shown here e.g. such as
considering the normality of the residuals. Indeed a consideration of
the residuals shows that the model fails to some extent in explaining
the very low values of O~3~, which can be seen in
@fig-MHplot. These few points (which skew the residuals) may
well be associated with air masses from the polluted regions of
Europe. Better and more useful models would likely be possible if the
data were split my airmass origin, which is something that will be
returned to when [openair]{.pkg} includes a consideration of back
trajectories.

```{r}
#| label: fig-M1ACF
#| fig-cap: ACF for the residuals of model M1.
#| fig-width: 5
#| fig-height: 4
#| out-width: 70%
acf(residuals(M1))
```

Further tests, also considering the partial autocorrelation function
(PACF) suggest that an AR1 model is suitable for modelling this
short-term autocorrelation. This is where modelling using a GAMM
(Generalized Additive Mixed Model) comes in because it is possible to
model the short-term autocorrelation using a linear mixed model. The
`gamm` function uses the package [nmle]{.pkg} and the Generalized
Linear Mixed Model (GLMM) fitting routine. In the M2 model below the
correlation structure is considered explicitly.

```{r M3mod}
M2 <- gamm(o3 ~ s(month, bs = "cc")  + s(trend), 
           data = monthly,
           correlation = corAR1(form = ~ month | year))
summary(M2$gam)
```

The ACF plot is shown in @fig-M2ACF and shows that the
autocorrelation has been dealt with and we can be rather more
confident about the trend component (not plotted). Note that in this
case we need to use the normalized residuals to get residuals that
take account of the fitted correlation structure.


```{r}
#| label: fig-M2ACF
#| fig-cap: ACF for the residuals of model M2.
#| fig-width: 5
#| fig-height: 4
#| out-width: 70%
acf(residuals(M2$lme, type = "normalized"))
```

Note that model M2 assumes that the trend and seasonal terms vary
independently of one another. However, if the seasonal amplitude
and/or phase change over time then a model that accounts for the
interaction between the two may be better. Indeed, this does seem to
be the case here, as shown by the improved fit of the model
below. This model uses a tensor product smooth (`te`) and the
reason for doing this and not using an isotropic smooth (`s`) is
that the trend and seasonal components are essentially on different
scales. We would not necessarily want to apply the same level of
smoothness to both components. An example of covariates on the same
scale would be latitude and longitude.

```{r M3modGAMM, cache=FALSE}
M3 <- gamm(o3 ~ s(month, bs = "cc")  + 
             te(trend, month), data = monthly,
           correlation = corAR1(form = ~ month | year))
summary(M3$gam)
```

It becomes a bit more difficult to plot the two-way interaction
between the trend and the month, but it is possible with a surface as
shown in @fig-perpsM3. This plot shows for example that
during summertime the trends component varies little. However for the
autumn and winter months there has been a much greater increase in the
trend component for O~3~.


```{r}
#| label: fig-perpsM3
#| fig-cap: Plot showing the two-way interaction between the trend and seasonal components.
#| fig-width: 7
#| fig-height: 7
#| out-width: 75%
plot(M3$gam, select = 2, pers = TRUE, theta = 225, phi = 10,ticktype = "detailed")
```

While there have been many steps involved in this short analysis, the
data at Mace Head are not typical of most air quality data observed,
say in urban areas. Much of the data considered in these areas does
not appear to have significant autocorrelation in the residuals once
the seasonal variation has been accounted for, therefore avoiding the
complexities of taking account of the correlation structure of the
data. It may be for example that sites like Mace Head and a pollutant
such as O~3~ are much more prone to larger scale atmospheric
processes that are not captured by these models.
